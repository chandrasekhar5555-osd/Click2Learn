trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  # Set your Angular project path
  angularPath: 'click2LearnInstructorClient'
  # Set your .NET project path
  dotnetPath: 'click2learnserver'

steps:

# Install Node.js for Angular
- task: NodeTool@0
  inputs:
    versionSpec: '16.x'
  displayName: 'Install Node.js'

# Install Angular dependencies
- task: Npm@1
  inputs:
    command: 'install'
    workingDirectory: $(angularPath)
  displayName: 'Install Angular dependencies'

# Build Angular project
- task: Npm@1
  inputs:
    command: 'run build --if-present'
    workingDirectory: $(angularPath)
  displayName: 'Build Angular project'

# Publish Angular build files (optional)
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(angularPath)/dist'
    ArtifactName: 'angularBuild'
    publishLocation: 'Container'
  displayName: 'Publish Angular build'

# Install .NET SDK
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.x'
  displayName: 'Install .NET 6 SDK'

# Restore .NET dependencies
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: $(dotnetPath)/click2learnserver.csproj
  displayName: 'Restore .NET dependencies'

# Build .NET project
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: $(dotnetPath)/click2learnserver.csproj
  displayName: 'Build .NET project'

# Run .NET tests (optional)
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: $(dotnetPath)/click2learnserver.csproj
  displayName: 'Run .NET tests'

# Publish .NET build artifacts (optional)
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(dotnetPath)/bin/$(BuildConfiguration)/net6.0/publish'
    ArtifactName: 'dotnetBuild'
    publishLocation: 'Container'
  displayName: 'Publish .NET build'

# Deploy Angular and .NET (example: to Azure Web Apps)
# Add deployment tasks here if needed (e.g., Azure App Service deploy tasks)
