trigger:
  branches:
    include:
      - mainaz  # Change to your target branch name if different

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'azure-connection'  # Azure service connection
  appName: 'your-backend-app-name'  # Azure App Service name for backend
  resourceGroup: 'your-resource-group'  # Resource group name
  backendDir: 'click2LearnBackend'  # Path to backend directory

steps:
  # Setup Node.js environment
  - task: NodeTool@0
    inputs:
      versionSpec: '16.x'

  # Install dependencies for backend
  - script: |
      cd $(backendDir)  # Navigate to backend directory
      npm install
    displayName: 'Install Dependencies for Backend'

  # Build backend (use npm start, as webpack isn't needed for backend)
  - script: |
      cd $(backendDir)  # Navigate to backend directory
      npm start  # Or use `npm run build` if a build step is required
    displayName: 'Build Backend (npm start)'

  # Test MongoDB Connection
  - script: |
      echo "Testing MongoDB Connection..."
      timeout 10s bash -c 'while ! nc -z click2learn.sqpcc.mongodb.net 27017; do echo "Waiting for MongoDB..."; sleep 2; done'
      echo "MongoDB is reachable!"
    displayName: 'Check MongoDB Connectivity'

  # Publish build artifacts for backend
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.SourcesDirectory)/$(backendDir)'  # Publish backend files
      artifactName: 'backend'
      publishLocation: 'Container'

  # Deploy Backend to Azure App Service
  - task: AzureWebApp@1
    inputs:
      azureSubscription: $(azureSubscription)  # Azure service connection
      appName: $(appName)  # Azure App Service name for backend
      package: '$(System.DefaultWorkingDirectory)/$(backendDir)'  # Path to backend to deploy
    displayName: 'Deploy Backend to Azure App Service'
